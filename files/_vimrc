" Install vim-plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Set up vim-plug
call plug#begin('~/.vim/plugged')

Plug 'scrooloose/syntastic'
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-fugitive'
Plug 'preservim/nerdtree'
Plug 'mattn/emmet-vim'
Plug 'chrisbra/Colorizer'
Plug 'editorconfig/editorconfig-vim'
Plug 'yaegassy/coc-blade-formatter', {'do': 'yarn install --frozen-lockfile'}
Plug 'preservim/tagbar'
nmap <F8> :TagbarToggle<CR>

Plug 'rainglow/vim'

call plug#end()

" Set tabs to 2 spaces
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set autoindent
set linespace=3
set cursorline
set background=dark
set ruler

" ..except in python files use four spaces to indent
autocmd FileType python setlocal shiftwidth=4 tabstop=8 softtabstop=4
autocmd FileType php setlocal shiftwidth=4 tabstop=8 softtabstop=4

" Turn on line numbers
set number

" Automatically detect file types
filetype on

" Interpret .md files as markdown
au BufNewFile,BufFilePre,BufRead *.md set filetype=markdown

" Make it look pretty
set t_Co=256

if &t_Co > 2 || has ("gui_running")
  syntax on
  set hlsearch
endif

" If we have a GUI, try to use Consolas 
if has("gui_gtk2")
  set guifont=Ubuntu\ Mono\ 13
  colorscheme darkside
elseif has("gui_macvim")
  colorscheme darkside
  set guifont=Consolas:h11
elseif has("gui_win32")
  colorscheme darkside
  set guifont=Consolas:h11
else
  colorscheme solarized
end

"#### keyboard shortcuts ####

" Colourscheme browsing
map <silent><f2> :PREVCOLOR<cr>
map <silent><f3> :NEXTCOLOR<cr>

" Code folding
map <silent><F5> zfa}
map <silent><F6> zo
map <silent><F7> zc

" Enable CTRL+HJKL window splitting
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Close buffer but don't close split
map <C-c> :bp\|bd #<CR>

" Navigate buffers
map <C-h> :bfirst<CR>
map <C-j> :bprevious<CR>
map <C-k> :bnext<CR>
map <C-l> :blast<CR>


" Use tab for Emmet completion
imap <expr> <tab> emmet#expandAbbrIntelligent("\<tab>")

" Toggle Nerdtree with ^n
map <C-n> :NERDTreeToggle<CR>

" Split to bottom right
set splitbelow
set splitright

" Show containing folder - ctrl-f5
if has("gui_running")
  if has("win32")
    :map <silent> <C-F5> :if expand("%:p:h") != ""<CR>:!start explorer.exe %:p:h<CR>:endif<CR><CR>
  endif
endif

" Taglist Shortcut
" Requires Vim-Taglist - http://vim-taglist.sourceforge.net/
" Which in turn requires Exuberant Ctags - http://ctags.sourceforge.net/
nnoremap <silent><F9> :TlistToggle<CR>

" NERDTree file browser
" map <silent><F10> :NERDTree C:/XAMPP/htdocs<cr><cr>

" Use unix line endings
set ff=unix

" Show nerdtree on startup if there's nothing else to do
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" Exit vim if only nerdtree is open
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" Allow using mouse to resize splits within Tmux
set mouse+=a
if &term =~ '^screen'
  " tmux knows the extended mouse mode
  set ttymouse=xterm2
endif

" Show hidden files
let NERDTreeShowHidden=1

